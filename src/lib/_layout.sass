/**
 * BSD 3-Clause License
 *
 * Copyright Â© 2023, Daniel Jonathan <daniel at cosmicmind dot com>
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 * 1. Redistributions of source code must retain the above copyright notice, this
 *    list of conditions and the following disclaimer.
 *
 * 2. Redistributions in binary form must reproduce the above copyright notice,
 *    this list of conditions and the following disclaimer in the documentation
 *    and/or other materials provided with the distribution.
 *
 * 3. Neither the name of the copyright holder nor the names of its
 *    contributors may be used to endorse or promote products derived from
 *    this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES LOSS OF USE, DATA, OR PROFITS OR BUSINESS INTERRUPTION) HOWEVER
 * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
 * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

@use 'sass:math'

@use './adaptive'
@use './conversion'

@import './block'

@mixin with-count($n)
  @if $n == 1
    &:first-child:nth-last-child(1)
      @content
  @else
    &:first-child:nth-last-child(#{$n}),
    &:first-child:nth-last-child(#{$n}) ~ &
      @content

@mixin nth-child($count)
  @for $i from 1 through $count
    @include with-count(#{$i})
      grid-column: span 1

@mixin grid-column($size, $count)
  @for $i from 1 through $count
    &.is-#{$size}#{$i}
      grid-column: span $i

@mixin flex($size, $count)
  @for $i from 1 through $count
    &.is-#{$size}#{$i}
      flex: $i 0 0

@mixin grid-template-columns($size, $count)
  @for $i from 1 through $count
    &.is-#{$size}#{$i}
      grid-template-columns: repeat($i, 1fr)

%m-layout
  @extend %m-block-flow-row

%m-tile
  @extend %m-block-flow-row

%m-section
  @extend %m-block-flow-row

  display: grid
  grid-auto-flow: row

%m-column
  @extend %m-block-flow-row

  @include grid-column('', 12)

  @include adaptive.is-compact
    @include grid-column('compact-', 12)

  @include adaptive.is-gt-compact
    @include grid-column('gt-compact-', 12)

  @include adaptive.is-small
    @include grid-column('small-', 12)

  @include adaptive.is-gt-small
    @include grid-column('gt-small-', 12)

  @include adaptive.is-lt-medium
    @include grid-column('lt-medium-', 12)

  @include adaptive.is-medium
    @include grid-column('medium-', 12)

  @include adaptive.is-gt-medium
    @include grid-column('gt-medium-', 12)

  @include adaptive.is-lt-large
    @include grid-column('lt-large-', 12)

  @include adaptive.is-large
    @include grid-column('large-', 12)

  @include adaptive.is-gt-large
    @include grid-column('gt-large-', 12)

  @include adaptive.is-lt-expanded
    @include grid-column('lt-expanded-', 12)

  @include adaptive.is-expanded
    @include grid-column('expanded-', 12)

%m-row
  @extend %m-block

  grid-template-columns: repeat(auto-fit, minmax(math.div(100, 12) * 1%, 1fr))

  @include grid-template-columns('', 12)

  @include adaptive.is-compact
    @include grid-template-columns('compact-', 12)

  @include adaptive.is-small
    @include grid-template-columns('small-', 12)

  @include adaptive.is-medium
    @include grid-template-columns('medium-', 12)

  @include adaptive.is-large
    @include grid-template-columns('large-', 12)

  @include adaptive.is-expanded
    @include grid-template-columns('expanded-', 12)

%m-adaptive
  @include adaptive.is-compact
    gap: 48px

    > %m-section
      margin: 0 16px

      gap: 16px

      > %m-row
        gap: 16px

        > %m-column
          gap: 16px

          > %m-tile
            gap: 16px

  @include adaptive.is-gt-compact
    gap: 72px

    > %m-section
      margin: 0 24px
      gap: 24px

      > %m-row
        gap: 24px

        > %m-column
          gap: 24px

          &.compact
            gap: 12px

          > %m-tile
            gap: 24px

            &.compact
              gap: 12px

  @include adaptive.is-gt-medium
    margin: 0 24px
    gap: 96px

    > %m-section
      margin: auto
      width: 100%
      max-width: conversion.to-px(adaptive.width(max-medium))

      &.expanded
        width: 100%
        max-width: conversion.to-px(adaptive.width(expanded))

      &.full
        width: 100%
        max-width: 100%